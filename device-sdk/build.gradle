apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'device-sdk'

    publishedGroupId = 'io.oddworks'
    libraryName = 'Device SDK'
    artifact = 'device-sdk'

    libraryDescription = 'Oddworks Device SDK for Android'

    siteUrl = 'http://android.guide.oddnetworks.com'
    gitUrl = 'https://github.com/oddnetworks/oddworks-android-sdk'

    libraryVersion = '3.2.0'

    developerId = 'brkattk'
    developerName = 'Erik Straub, Dan Pallas'
    developerEmail = 'erik.straub@oddnetworks.com, dan@madglory.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ['Apache-2.0']
}

group = publishedGroupId    // Maven Group ID for the artifact
version = libraryVersion    // Version number for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}


android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 3
        versionName libraryVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    testOptions {
        unitTests.all {
            // All the usual Gradle options.
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }
}

def android_support_version = "25.3.1"

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "com.android.support:appcompat-v7:$android_support_version"
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile "com.android.support:support-annotations:$android_support_version"
    compile "io.reactivex:rxandroid:1.2.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'org.skyscreamer:jsonassert:1.3.0'
    androidTestCompile 'org.hamcrest:hamcrest-core:1.3'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

dokka {
    moduleName = 'device-sdk'
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/docs/javadoc"
//    processConfigurations = ['compile', 'extra']
//    includes = ['packages.md', 'extra.md']
//    samples = ['samples/basic.kt', 'samples/advanced.kt']
    linkMapping {
        dir = "src/main/java"
        url = "https://github.com/oddnetworks/oddworks-android-sdk/blob/master/device-sdk/src/main/java"
        suffix = "#L"
    }
    sourceDirs = files('src/main/java')
}

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from dokka.outputDirectory
}

task copyDocs(type: Copy, dependsOn: dokka) {
    from 'build/docs/javadoc'
    into "../docs/docs/javadoc/$version"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        userOrg = 'odd-networks'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = System.getenv('GPG_PASSWORD')
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
repositories {
    mavenCentral()
}
